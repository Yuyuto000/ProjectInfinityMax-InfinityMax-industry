#!/usr/bin/env python3
# CSV format: id,inputA_id,inputA_count,inputB_id,inputB_count,output_id,output_count,ticks,joulesPerTick
# Example: crusher_iron_dust,iron_dust,1,,0,iron_ingot,1,200,120.0

import csv, sys

def convert(csvfile, out_java_class="RecipeBootstrap", package="com.infinitymax.industry.registry"):
    rows = []
    with open(csvfile, newline='', encoding='utf-8') as f:
        r = csv.reader(f)
        for row in r:
            if not row or row[0].startswith("#"): continue
            rows.append(row)
    print("// Generated by recipe_csv_to_java.py")
    print(f"package {package};")
    print("import net.minecraft.world.item.Items;")
    print("import net.minecraft.world.item.ItemStack;")
    print("import com.infinitymax.industry.registry.RecipeRegistry;")
    print("public class " + out_java_class + " {")
    print("  public static void bootstrap() {")
    for r in rows:
        id_, inA, inAC, inB, inBC, out, outC, ticks, jpt = r
        inA_item = f"new ItemStack( /* lookup by id: {inA} */ )" if inA else "null"
        inB_item = f"new ItemStack( /* lookup by id: {inB} */ )" if inB else "null"
        out_item = f"new ItemStack( /* lookup by id: {out} */ )"
        # We can't know mapping in script so leave TODO markers
        print(f'    // TODO create ItemStack for recipe {id_}')
        print(f'    RecipeRegistry.register(new RecipeRegistry.Recipe("{id_}", {inA_item}, {inB_item}, {out_item}, {ticks}, {jpt}));')
    print("  }")
    print("}")
    
if __name__ == '__main__':
    if len(sys.argv) < 2:
        print("usage: recipe_csv_to_java.py recipes.csv")
    else:
        convert(sys.argv[1])